version: "3"

# configuration common to all services using the xthulu image
x-xthulu-common: &xthulu-common
  environment:
    TERM: xterm-256color
  image: xthulu
  tty: true
  volumes:
    - ../data:/app/data:ro
    - ../run:/app/run
    - ../userland:/app/userland:ro

networks:
  internal:
  proxy:

services:
  # for docker image build dependency
  base-image:
    build:
      context: ..
      dockerfile: ./docker/Dockerfile
    entrypoint: /bin/true
    image: xthulu
    networks:
      - internal
    restart: "no"
    scale: 0

  # for command line utils
  cli:
    entrypoint: /usr/local/bin/python3 -m xthulu
    depends_on:
      - cache
      - db
    image: xthulu
    networks:
      - internal
    restart: "no"
    scale: 0
    <<: *xthulu-common

  # for userland command line utils
  user:
    entrypoint: /usr/local/bin/python3 -m userland
    depends_on:
      - cache
      - db
    image: xthulu
    networks:
      - internal
    restart: "no"
    scale: 0
    <<: *xthulu-common

  #---

  cache:
    image: redis:alpine
    networks:
      - internal
    restart: unless-stopped

  db:
    environment:
      POSTGRES_USER: xthulu
      POSTGRES_PASSWORD: xthulu
    image: postgres:13-alpine
    networks:
      - internal
    restart: unless-stopped
    volumes:
      - db-data:/var/lib/postgresql/data

  proxy:
    build:
      context: ./traefik
      dockerfile: Dockerfile
    image: xthulu:traefik
    networks:
      - proxy
    ports:
      - "22:22" # need quotes or else YAML interprets it as hex :P
      - 80:80
      - 443:443
      - 127.0.0.1:8080:8080
    restart: unless-stopped
    volumes:
      - proxy-acme:/etc/traefik/acme
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro

  ssh:
    command: ssh start
    depends_on:
      - base-image
      - cache
      - db
    expose:
      - 8022
    labels:
      - traefik.enable=true
      - traefik.tcp.routers.ssh.entrypoints=ssh
      - traefik.tcp.routers.ssh.rule=HostSNI(`*`)
      - traefik.tcp.routers.ssh.service=ssh
      - traefik.tcp.services.ssh.loadbalancer.proxyprotocol.version=1
    networks:
      - internal
      - proxy
    restart: unless-stopped
    <<: *xthulu-common

  web:
    command: web start
    depends_on:
      - base-image
      - db
    expose:
      - 5000
    labels:
      - traefik.enable=true
      - traefik.http.routers.web.entrypoints=https
      - traefik.http.routers.web.middlewares=no-server-header@file
      - traefik.http.routers.web.rule=PathPrefix(`/api`)
      - traefik.http.routers.web.tls=true
    networks:
      - internal
      - proxy
    restart: unless-stopped
    <<: *xthulu-common

  web-static:
    image: nginx:alpine-slim
    labels:
      - traefik.enable=true
      - traefik.http.routers.web-static.entrypoints=https
      - traefik.http.routers.web-static.middlewares=no-server-header@file
      - traefik.http.routers.web-static.rule=PathPrefix(`/`)
      - traefik.http.routers.web-static.tls=true
    networks:
      - proxy
    restart: unless-stopped
    volumes:
      - ../html:/usr/share/nginx/html

volumes:
  db-data:
  proxy-acme:
